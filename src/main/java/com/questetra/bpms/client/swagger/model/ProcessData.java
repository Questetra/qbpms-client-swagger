/*
 * Questetra BPM Suite APIs
 * Questetra BPM Suite APIs
 *
 * OpenAPI spec version: 11.6.0
 * Contact: support@questetra.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.questetra.bpms.client.swagger.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ProcessData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-28T13:37:26.457+09:00")
public class ProcessData {
  @SerializedName("dataType")
  private String dataType = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("processDataDefinitionNumber")
  private Integer processDataDefinitionNumber = null;

  @SerializedName("subType")
  private String subType = null;

  @SerializedName("viewOrder")
  private Integer viewOrder = null;

  @SerializedName("value")
  private Object value = null;

  public ProcessData dataType(String dataType) {
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @ApiModelProperty(value = "")
  public String getDataType() {
    return dataType;
  }

  public void setDataType(String dataType) {
    this.dataType = dataType;
  }

  public ProcessData id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ProcessData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProcessData processDataDefinitionNumber(Integer processDataDefinitionNumber) {
    this.processDataDefinitionNumber = processDataDefinitionNumber;
    return this;
  }

   /**
   * Get processDataDefinitionNumber
   * @return processDataDefinitionNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getProcessDataDefinitionNumber() {
    return processDataDefinitionNumber;
  }

  public void setProcessDataDefinitionNumber(Integer processDataDefinitionNumber) {
    this.processDataDefinitionNumber = processDataDefinitionNumber;
  }

  public ProcessData subType(String subType) {
    this.subType = subType;
    return this;
  }

   /**
   * Get subType
   * @return subType
  **/
  @ApiModelProperty(value = "")
  public String getSubType() {
    return subType;
  }

  public void setSubType(String subType) {
    this.subType = subType;
  }

  public ProcessData viewOrder(Integer viewOrder) {
    this.viewOrder = viewOrder;
    return this;
  }

   /**
   * Get viewOrder
   * @return viewOrder
  **/
  @ApiModelProperty(value = "")
  public Integer getViewOrder() {
    return viewOrder;
  }

  public void setViewOrder(Integer viewOrder) {
    this.viewOrder = viewOrder;
  }

  public ProcessData value(Object value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public Object getValue() {
    return value;
  }

  public void setValue(Object value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessData processData = (ProcessData) o;
    return Objects.equals(this.dataType, processData.dataType) &&
        Objects.equals(this.id, processData.id) &&
        Objects.equals(this.name, processData.name) &&
        Objects.equals(this.processDataDefinitionNumber, processData.processDataDefinitionNumber) &&
        Objects.equals(this.subType, processData.subType) &&
        Objects.equals(this.viewOrder, processData.viewOrder) &&
        Objects.equals(this.value, processData.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataType, id, name, processDataDefinitionNumber, subType, viewOrder, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessData {\n");
    
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    processDataDefinitionNumber: ").append(toIndentedString(processDataDefinitionNumber)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    viewOrder: ").append(toIndentedString(viewOrder)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

